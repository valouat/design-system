{"ast":null,"code":"import _objectWithoutProperties from \"/Users/val/Documents/Ouat/ouat-design-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/val/Documents/Ouat/ouat-design-system/src/Link.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport { darken } from 'polished';\nimport { Icon } from './Icon';\nimport { color } from './shared/styles';\nconst linkStyles = css`\n  display: inline-block;\n  transition: transform 150ms ease-out, color 150ms ease-out;\n  text-decoration: none;\n\n  color: ${color.secondary};\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: translateY(-1px);\n    color: ${darken(0.07, color.secondary)};\n  }\n  &:active {\n    transform: translateY(0);\n    color: ${darken(0.1, color.secondary)};\n  }\n\n  svg {\n    display: inline-block;\n    height: 1em;\n    width: 1em;\n    vertical-align: text-top;\n    position: relative;\n    bottom: -0.125em;\n    margin-right: 0.4em;\n  }\n\n  ${props => props.containsIcon && css`\n      svg {\n        height: 1em;\n        width: 1em;\n        vertical-align: middle;\n        position: relative;\n        bottom: 0;\n        margin-right: 0;\n      }\n    `};\n\n  ${props => props.secondary && css`\n      color: ${color.mediumdark};\n\n      &:hover {\n        color: ${color.dark};\n      }\n\n      &:active {\n        color: ${color.darker};\n      }\n    `};\n\n  ${props => props.tertiary && css`\n      color: ${color.dark};\n\n      &:hover {\n        color: ${color.darkest};\n      }\n\n      &:active {\n        color: ${color.mediumdark};\n      }\n    `};\n\n  ${props => props.nochrome && css`\n      color: inherit;\n\n      &:hover,\n      &:active {\n        color: inherit;\n        text-decoration: underline;\n      }\n    `};\n\n  ${props => props.inverse && css`\n      color: ${color.lightest};\n\n      &:hover {\n        color: ${color.lighter};\n      }\n\n      &:active {\n        color: ${color.light};\n      }\n    `};\n\n  ${props => props.isButton && css`\n      border: 0;\n      border-radius: 0;\n      background: none;\n      padding: 0;\n      font-size: inherit;\n    `};\n`;\nconst LinkInner = styled.span`\n  ${props => props.withArrow && css`\n      > svg:last-of-type {\n        height: 0.7em;\n        width: 0.7em;\n        margin-right: 0;\n        margin-left: 0.25em;\n        bottom: auto;\n        vertical-align: inherit;\n      }\n    `};\n`;\nconst LinkA = styled.a`\n  ${linkStyles};\n`;\nconst LinkButton = styled.button`\n  /* reset button styles */\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n\n  ${linkStyles};\n`;\n\nconst applyStyle = LinkWrapper => {\n  return LinkWrapper && styled((_ref) => {\n    let {\n      containsIcon,\n      inverse,\n      nochrome,\n      secondary,\n      tertiary\n    } = _ref,\n        linkWrapperRest = _objectWithoutProperties(_ref, [\"containsIcon\", \"inverse\", \"nochrome\", \"secondary\", \"tertiary\"]);\n\n    return /*#__PURE__*/React.createElement(LinkWrapper, Object.assign({}, linkWrapperRest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }));\n  })`\n      ${linkStyles};\n    `;\n};\n/**\n * Links can contains text and/or icons. Be careful using only icons, you must provide a text alternative via aria-label for accessibility.\n */\n\n\nexport function Link(_ref2) {\n  let {\n    isButton,\n    withArrow,\n    LinkWrapper,\n    children\n  } = _ref2,\n      rest = _objectWithoutProperties(_ref2, [\"isButton\", \"withArrow\", \"LinkWrapper\", \"children\"]);\n\n  const content = /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LinkInner, {\n    withArrow: withArrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, children, withArrow && /*#__PURE__*/React.createElement(Icon, {\n    icon: \"arrowright\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 23\n    }\n  })));\n  const StyledLinkWrapper = applyStyle(LinkWrapper);\n  let SelectedLink = LinkA;\n\n  if (LinkWrapper) {\n    SelectedLink = StyledLinkWrapper;\n  } else if (isButton) {\n    SelectedLink = LinkButton;\n  }\n\n  return /*#__PURE__*/React.createElement(SelectedLink, Object.assign({}, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 10\n    }\n  }), content);\n}\nLink.displayName = \"Link\";\nLink.propTypes = {\n  isButton: PropTypes.bool,\n  children: PropTypes.node,\n  withArrow: PropTypes.bool,\n  containsIcon: PropTypes.bool,\n  LinkWrapper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  inverse: PropTypes.bool,\n  nochrome: PropTypes.bool,\n  secondary: PropTypes.bool,\n  tertiary: PropTypes.bool\n};\nLink.defaultProps = {\n  isButton: false,\n  children: null,\n  withArrow: false,\n  containsIcon: false,\n  LinkWrapper: undefined,\n  inverse: false,\n  nochrome: false,\n  secondary: false,\n  tertiary: false\n};\nLink.__docgenInfo = {\n  \"description\": \"Links can contains text and/or icons. Be careful using only icons, you must provide a text alternative via aria-label for accessibility.\",\n  \"methods\": [],\n  \"displayName\": \"Link\",\n  \"props\": {\n    \"isButton\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"children\": {\n      \"defaultValue\": {\n        \"value\": \"null\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"withArrow\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"containsIcon\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"LinkWrapper\": {\n      \"defaultValue\": {\n        \"value\": \"undefined\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"func\"\n        }, {\n          \"name\": \"object\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"inverse\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"nochrome\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"secondary\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"tertiary\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/Link.js\"] = {\n    name: \"Link\",\n    docgenInfo: Link.__docgenInfo,\n    path: \"src/Link.js\"\n  };\n}","map":{"version":3,"sources":["/Users/val/Documents/Ouat/ouat-design-system/src/Link.js"],"names":["React","Fragment","PropTypes","styled","css","darken","Icon","color","linkStyles","secondary","props","containsIcon","mediumdark","dark","darker","tertiary","darkest","nochrome","inverse","lightest","lighter","light","isButton","LinkInner","span","withArrow","LinkA","a","LinkButton","button","applyStyle","LinkWrapper","linkWrapperRest","Link","children","rest","content","StyledLinkWrapper","SelectedLink","propTypes","bool","node","oneOfType","func","object","defaultProps","undefined"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,MAAMC,UAAU,GAAGJ,GAAI;;;;;WAKZG,KAAK,CAACE,SAAU;;;;;;aAMdJ,MAAM,CAAC,IAAD,EAAOE,KAAK,CAACE,SAAb,CAAwB;;;;aAI9BJ,MAAM,CAAC,GAAD,EAAME,KAAK,CAACE,SAAZ,CAAuB;;;;;;;;;;;;;IAatCC,KAAK,IACLA,KAAK,CAACC,YAAN,IACAP,GAAI;;;;;;;;;KASF;;IAEFM,KAAK,IACLA,KAAK,CAACD,SAAN,IACAL,GAAI;eACOG,KAAK,CAACK,UAAW;;;iBAGfL,KAAK,CAACM,IAAK;;;;iBAIXN,KAAK,CAACO,MAAO;;KAExB;;IAEFJ,KAAK,IACLA,KAAK,CAACK,QAAN,IACAX,GAAI;eACOG,KAAK,CAACM,IAAK;;;iBAGTN,KAAK,CAACS,OAAQ;;;;iBAIdT,KAAK,CAACK,UAAW;;KAE5B;;IAEFF,KAAK,IACLA,KAAK,CAACO,QAAN,IACAb,GAAI;;;;;;;;KAQF;;IAEFM,KAAK,IACLA,KAAK,CAACQ,OAAN,IACAd,GAAI;eACOG,KAAK,CAACY,QAAS;;;iBAGbZ,KAAK,CAACa,OAAQ;;;;iBAIdb,KAAK,CAACc,KAAM;;KAEvB;;IAEFX,KAAK,IACLA,KAAK,CAACY,QAAN,IACAlB,GAAI;;;;;;KAMF;CAvGN;AA0GA,MAAMmB,SAAS,GAAGpB,MAAM,CAACqB,IAAK;IAC1Bd,KAAK,IACLA,KAAK,CAACe,SAAN,IACArB,GAAI;;;;;;;;;KASF;CAZN;AAeA,MAAMsB,KAAK,GAAGvB,MAAM,CAACwB,CAAE;IACnBnB,UAAW;CADf;AAIA,MAAMoB,UAAU,GAAGzB,MAAM,CAAC0B,MAAO;;;;;;;;;;IAU7BrB,UAAW;CAVf;;AAaA,MAAMsB,UAAU,GAAGC,WAAW,IAAI;AAChC,SACEA,WAAW,IACX5B,MAAM,CAAC;AAAA,QAAC;AAAEQ,MAAAA,YAAF;AAAgBO,MAAAA,OAAhB;AAAyBD,MAAAA,QAAzB;AAAmCR,MAAAA,SAAnC;AAA8CM,MAAAA;AAA9C,KAAD;AAAA,QAA4DiB,eAA5D;;AAAA,wBACL,oBAAC,WAAD,oBAAiBA,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADK;AAAA,GAAD,CAEH;QACCxB,UAAW;KALjB;AAQD,CATD;AAWA;;;;;AAGA,OAAO,SAASyB,IAAT,QAAuE;AAAA,MAAzD;AAAEX,IAAAA,QAAF;AAAYG,IAAAA,SAAZ;AAAuBM,IAAAA,WAAvB;AAAoCG,IAAAA;AAApC,GAAyD;AAAA,MAARC,IAAQ;;AAC5E,QAAMC,OAAO,gBACX,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEX,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,QADH,EAEGT,SAAS,iBAAI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFhB,CADF,CADF;AASA,QAAMY,iBAAiB,GAAGP,UAAU,CAACC,WAAD,CAApC;AAEA,MAAIO,YAAY,GAAGZ,KAAnB;;AACA,MAAIK,WAAJ,EAAiB;AACfO,IAAAA,YAAY,GAAGD,iBAAf;AACD,GAFD,MAEO,IAAIf,QAAJ,EAAc;AACnBgB,IAAAA,YAAY,GAAGV,UAAf;AACD;;AAED,sBAAO,oBAAC,YAAD,oBAAkBO,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAyBC,OAAzB,CAAP;AACD;AApBeH,I;AAsBhBA,IAAI,CAACM,SAAL,GAAiB;AACfjB,EAAAA,QAAQ,EAAEpB,SAAS,CAACsC,IADL;AAEfN,EAAAA,QAAQ,EAAEhC,SAAS,CAACuC,IAFL;AAGfhB,EAAAA,SAAS,EAAEvB,SAAS,CAACsC,IAHN;AAIf7B,EAAAA,YAAY,EAAET,SAAS,CAACsC,IAJT;AAKfT,EAAAA,WAAW,EAAE7B,SAAS,CAACwC,SAAV,CAAoB,CAACxC,SAAS,CAACyC,IAAX,EAAiBzC,SAAS,CAAC0C,MAA3B,CAApB,CALE;AAMf1B,EAAAA,OAAO,EAAEhB,SAAS,CAACsC,IANJ;AAOfvB,EAAAA,QAAQ,EAAEf,SAAS,CAACsC,IAPL;AAQf/B,EAAAA,SAAS,EAAEP,SAAS,CAACsC,IARN;AASfzB,EAAAA,QAAQ,EAAEb,SAAS,CAACsC;AATL,CAAjB;AAYAP,IAAI,CAACY,YAAL,GAAoB;AAClBvB,EAAAA,QAAQ,EAAE,KADQ;AAElBY,EAAAA,QAAQ,EAAE,IAFQ;AAGlBT,EAAAA,SAAS,EAAE,KAHO;AAIlBd,EAAAA,YAAY,EAAE,KAJI;AAKlBoB,EAAAA,WAAW,EAAEe,SALK;AAMlB5B,EAAAA,OAAO,EAAE,KANS;AAOlBD,EAAAA,QAAQ,EAAE,KAPQ;AAQlBR,EAAAA,SAAS,EAAE,KARO;AASlBM,EAAAA,QAAQ,EAAE;AATQ,CAApB","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport { darken } from 'polished';\n\nimport { Icon } from './Icon';\nimport { color } from './shared/styles';\n\nconst linkStyles = css`\n  display: inline-block;\n  transition: transform 150ms ease-out, color 150ms ease-out;\n  text-decoration: none;\n\n  color: ${color.secondary};\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: translateY(-1px);\n    color: ${darken(0.07, color.secondary)};\n  }\n  &:active {\n    transform: translateY(0);\n    color: ${darken(0.1, color.secondary)};\n  }\n\n  svg {\n    display: inline-block;\n    height: 1em;\n    width: 1em;\n    vertical-align: text-top;\n    position: relative;\n    bottom: -0.125em;\n    margin-right: 0.4em;\n  }\n\n  ${props =>\n    props.containsIcon &&\n    css`\n      svg {\n        height: 1em;\n        width: 1em;\n        vertical-align: middle;\n        position: relative;\n        bottom: 0;\n        margin-right: 0;\n      }\n    `};\n\n  ${props =>\n    props.secondary &&\n    css`\n      color: ${color.mediumdark};\n\n      &:hover {\n        color: ${color.dark};\n      }\n\n      &:active {\n        color: ${color.darker};\n      }\n    `};\n\n  ${props =>\n    props.tertiary &&\n    css`\n      color: ${color.dark};\n\n      &:hover {\n        color: ${color.darkest};\n      }\n\n      &:active {\n        color: ${color.mediumdark};\n      }\n    `};\n\n  ${props =>\n    props.nochrome &&\n    css`\n      color: inherit;\n\n      &:hover,\n      &:active {\n        color: inherit;\n        text-decoration: underline;\n      }\n    `};\n\n  ${props =>\n    props.inverse &&\n    css`\n      color: ${color.lightest};\n\n      &:hover {\n        color: ${color.lighter};\n      }\n\n      &:active {\n        color: ${color.light};\n      }\n    `};\n\n  ${props =>\n    props.isButton &&\n    css`\n      border: 0;\n      border-radius: 0;\n      background: none;\n      padding: 0;\n      font-size: inherit;\n    `};\n`;\n\nconst LinkInner = styled.span`\n  ${props =>\n    props.withArrow &&\n    css`\n      > svg:last-of-type {\n        height: 0.7em;\n        width: 0.7em;\n        margin-right: 0;\n        margin-left: 0.25em;\n        bottom: auto;\n        vertical-align: inherit;\n      }\n    `};\n`;\n\nconst LinkA = styled.a`\n  ${linkStyles};\n`;\n\nconst LinkButton = styled.button`\n  /* reset button styles */\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n\n  ${linkStyles};\n`;\n\nconst applyStyle = LinkWrapper => {\n  return (\n    LinkWrapper &&\n    styled(({ containsIcon, inverse, nochrome, secondary, tertiary, ...linkWrapperRest }) => (\n      <LinkWrapper {...linkWrapperRest} />\n    ))`\n      ${linkStyles};\n    `\n  );\n};\n\n/**\n * Links can contains text and/or icons. Be careful using only icons, you must provide a text alternative via aria-label for accessibility.\n */\nexport function Link({ isButton, withArrow, LinkWrapper, children, ...rest }) {\n  const content = (\n    <Fragment>\n      <LinkInner withArrow={withArrow}>\n        {children}\n        {withArrow && <Icon icon=\"arrowright\" />}\n      </LinkInner>\n    </Fragment>\n  );\n\n  const StyledLinkWrapper = applyStyle(LinkWrapper);\n\n  let SelectedLink = LinkA;\n  if (LinkWrapper) {\n    SelectedLink = StyledLinkWrapper;\n  } else if (isButton) {\n    SelectedLink = LinkButton;\n  }\n\n  return <SelectedLink {...rest}>{content}</SelectedLink>;\n}\n\nLink.propTypes = {\n  isButton: PropTypes.bool,\n  children: PropTypes.node,\n  withArrow: PropTypes.bool,\n  containsIcon: PropTypes.bool,\n  LinkWrapper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  inverse: PropTypes.bool,\n  nochrome: PropTypes.bool,\n  secondary: PropTypes.bool,\n  tertiary: PropTypes.bool,\n};\n\nLink.defaultProps = {\n  isButton: false,\n  children: null,\n  withArrow: false,\n  containsIcon: false,\n  LinkWrapper: undefined,\n  inverse: false,\n  nochrome: false,\n  secondary: false,\n  tertiary: false,\n};\n"]},"metadata":{},"sourceType":"module"}