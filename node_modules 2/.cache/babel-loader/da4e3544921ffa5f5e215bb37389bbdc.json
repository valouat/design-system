{"ast":null,"code":"var _jsxFileName = \"/Users/val/Documents/Ouat/ouat-design-system/src/Icon.stories.js\";\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/val/Documents/Ouat/ouat-design-system/src\"; // @ts-ignore\n\nvar __STORY__ = \"import React, { Fragment } from 'react';\\nimport styled, { css } from 'styled-components';\\n\\nimport { Icon } from './Icon';\\nimport { icons } from './shared/icons';\\n\\nconst Meta = styled.div`\\n  color: #666;\\n  font-size: 12px;\\n`;\\n\\nconst Item = styled.li`\\n  display: inline-flex;\\n  flex-direction: row;\\n  align-items: center;\\n  flex: 0 1 20%;\\n  min-width: 120px;\\n\\n  padding: 0px 7.5px 20px;\\n\\n  svg {\\n    margin-right: 10px;\\n    width: 24px;\\n    height: 24px;\\n  }\\n\\n  ${props =>\\n    props.minimal &&\\n    css`\\n      flex: none;\\n      min-width: auto;\\n      padding: 0;\\n      background: #fff;\\n      border: 1px solid #666;\\n\\n      svg {\\n        display: block;\\n        margin-right: 0;\\n        width: 48px;\\n        height: 48px;\\n      }\\n    `};\\n`;\\n\\nconst List = styled.ul`\\n  display: flex;\\n  flex-flow: row wrap;\\n  list-style: none;\\n`;\\n\\nexport default {\\n  title: 'Design System|Icon',\\n  component: Icon,\\n};\\n\\nexport const labels = () => (\\n  <Fragment>\\n    There are {Object.keys(icons).length} icons\\n    <List>\\n      {Object.keys(icons).map(key => (\\n        <Item key={key}>\\n          <Icon icon={key} aria-hidden />\\n          <Meta>{key}</Meta>\\n        </Item>\\n      ))}\\n    </List>\\n  </Fragment>\\n);\\n\\nexport const noLabels = () => (\\n  <List>\\n    {Object.keys(icons).map(key => (\\n      <Item minimal key={key}>\\n        <Icon icon={key} aria-label={key} />\\n      </Item>\\n    ))}\\n  </List>\\n);\\n\\nnoLabels.story = {\\n  name: 'no labels',\\n};\\n\\nexport const inline = () => (\\n  <Fragment>\\n    this is an inline <Icon icon=\\\"facehappy\\\" aria-label=\\\"Happy face\\\" /> icon (default)\\n  </Fragment>\\n);\\n\\nexport const block = () => (\\n  <Fragment>\\n    this is a block <Icon icon=\\\"facehappy\\\" aria-label=\\\"Happy face\\\" block /> icon\\n  </Fragment>\\n);\\n\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {\n  \"design-system-icon--labels\": {\n    \"startLoc\": {\n      \"col\": 22,\n      \"line\": 56\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 68\n    },\n    \"startBody\": {\n      \"col\": 22,\n      \"line\": 56\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 68\n    }\n  },\n  \"design-system-icon--no-labels\": {\n    \"startLoc\": {\n      \"col\": 24,\n      \"line\": 70\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 78\n    },\n    \"startBody\": {\n      \"col\": 24,\n      \"line\": 70\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 78\n    }\n  },\n  \"design-system-icon--inline\": {\n    \"startLoc\": {\n      \"col\": 22,\n      \"line\": 84\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 88\n    },\n    \"startBody\": {\n      \"col\": 22,\n      \"line\": 84\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 88\n    }\n  },\n  \"design-system-icon--block\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 90\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 94\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 90\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 94\n    }\n  }\n}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/Icon.stories.js\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport React, { Fragment } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Icon } from './Icon';\nimport { icons } from './shared/icons';\nconst Meta = styled.div`\n  color: #666;\n  font-size: 12px;\n`;\nconst Item = styled.li`\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n  flex: 0 1 20%;\n  min-width: 120px;\n\n  padding: 0px 7.5px 20px;\n\n  svg {\n    margin-right: 10px;\n    width: 24px;\n    height: 24px;\n  }\n\n  ${props => props.minimal && css`\n      flex: none;\n      min-width: auto;\n      padding: 0;\n      background: #fff;\n      border: 1px solid #666;\n\n      svg {\n        display: block;\n        margin-right: 0;\n        width: 48px;\n        height: 48px;\n      }\n    `};\n`;\nconst List = styled.ul`\n  display: flex;\n  flex-flow: row wrap;\n  list-style: none;\n`;\nexport default {\n  parameters: {\n    \"storySource\": {\n      \"source\": \"import React, { Fragment } from 'react';\\nimport styled, { css } from 'styled-components';\\n\\nimport { Icon } from './Icon';\\nimport { icons } from './shared/icons';\\n\\nconst Meta = styled.div`\\n  color: #666;\\n  font-size: 12px;\\n`;\\n\\nconst Item = styled.li`\\n  display: inline-flex;\\n  flex-direction: row;\\n  align-items: center;\\n  flex: 0 1 20%;\\n  min-width: 120px;\\n\\n  padding: 0px 7.5px 20px;\\n\\n  svg {\\n    margin-right: 10px;\\n    width: 24px;\\n    height: 24px;\\n  }\\n\\n  ${props =>\\n    props.minimal &&\\n    css`\\n      flex: none;\\n      min-width: auto;\\n      padding: 0;\\n      background: #fff;\\n      border: 1px solid #666;\\n\\n      svg {\\n        display: block;\\n        margin-right: 0;\\n        width: 48px;\\n        height: 48px;\\n      }\\n    `};\\n`;\\n\\nconst List = styled.ul`\\n  display: flex;\\n  flex-flow: row wrap;\\n  list-style: none;\\n`;\\n\\nexport default {\\n  title: 'Design System|Icon',\\n  component: Icon,\\n};\\n\\nexport const labels = () => (\\n  <Fragment>\\n    There are {Object.keys(icons).length} icons\\n    <List>\\n      {Object.keys(icons).map(key => (\\n        <Item key={key}>\\n          <Icon icon={key} aria-hidden />\\n          <Meta>{key}</Meta>\\n        </Item>\\n      ))}\\n    </List>\\n  </Fragment>\\n);\\n\\nexport const noLabels = () => (\\n  <List>\\n    {Object.keys(icons).map(key => (\\n      <Item minimal key={key}>\\n        <Icon icon={key} aria-label={key} />\\n      </Item>\\n    ))}\\n  </List>\\n);\\n\\nnoLabels.story = {\\n  name: 'no labels',\\n};\\n\\nexport const inline = () => (\\n  <Fragment>\\n    this is an inline <Icon icon=\\\"facehappy\\\" aria-label=\\\"Happy face\\\" /> icon (default)\\n  </Fragment>\\n);\\n\\nexport const block = () => (\\n  <Fragment>\\n    this is a block <Icon icon=\\\"facehappy\\\" aria-label=\\\"Happy face\\\" block /> icon\\n  </Fragment>\\n);\\n\",\n      \"locationsMap\": {\n        \"design-system-icon--labels\": {\n          \"startLoc\": {\n            \"col\": 22,\n            \"line\": 56\n          },\n          \"endLoc\": {\n            \"col\": 1,\n            \"line\": 68\n          },\n          \"startBody\": {\n            \"col\": 22,\n            \"line\": 56\n          },\n          \"endBody\": {\n            \"col\": 1,\n            \"line\": 68\n          }\n        },\n        \"design-system-icon--no-labels\": {\n          \"startLoc\": {\n            \"col\": 24,\n            \"line\": 70\n          },\n          \"endLoc\": {\n            \"col\": 1,\n            \"line\": 78\n          },\n          \"startBody\": {\n            \"col\": 24,\n            \"line\": 70\n          },\n          \"endBody\": {\n            \"col\": 1,\n            \"line\": 78\n          }\n        },\n        \"design-system-icon--inline\": {\n          \"startLoc\": {\n            \"col\": 22,\n            \"line\": 84\n          },\n          \"endLoc\": {\n            \"col\": 1,\n            \"line\": 88\n          },\n          \"startBody\": {\n            \"col\": 22,\n            \"line\": 84\n          },\n          \"endBody\": {\n            \"col\": 1,\n            \"line\": 88\n          }\n        },\n        \"design-system-icon--block\": {\n          \"startLoc\": {\n            \"col\": 21,\n            \"line\": 90\n          },\n          \"endLoc\": {\n            \"col\": 1,\n            \"line\": 94\n          },\n          \"startBody\": {\n            \"col\": 21,\n            \"line\": 90\n          },\n          \"endBody\": {\n            \"col\": 1,\n            \"line\": 94\n          }\n        }\n      }\n    }\n  },\n  title: 'Design System|Icon',\n  component: Icon\n};\nexport const labels = addSourceDecorator(() => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 3\n  }\n}, \"There are \", Object.keys(icons).length, \" icons\", /*#__PURE__*/React.createElement(List, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }\n}, Object.keys(icons).map(key => /*#__PURE__*/React.createElement(Item, {\n  key: key,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Icon, {\n  icon: key,\n  \"aria-hidden\": true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(Meta, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 11\n  }\n}, key))))), {\n  __STORY__,\n  __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__\n});\n;\nexport const noLabels = addSourceDecorator(() => /*#__PURE__*/React.createElement(List, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 3\n  }\n}, Object.keys(icons).map(key => /*#__PURE__*/React.createElement(Item, {\n  minimal: true,\n  key: key,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Icon, {\n  icon: key,\n  \"aria-label\": key,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }\n})))), {\n  __STORY__,\n  __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__\n});\n;\nnoLabels.story = {\n  name: 'no labels'\n};\nexport const inline = addSourceDecorator(() => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 3\n  }\n}, \"this is an inline \", /*#__PURE__*/React.createElement(Icon, {\n  icon: \"facehappy\",\n  \"aria-label\": \"Happy face\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 23\n  }\n}), \" icon (default)\"), {\n  __STORY__,\n  __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__\n});\n;\nexport const block = addSourceDecorator(() => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 3\n  }\n}, \"this is a block \", /*#__PURE__*/React.createElement(Icon, {\n  icon: \"facehappy\",\n  \"aria-label\": \"Happy face\",\n  block: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 21\n  }\n}), \" icon\"), {\n  __STORY__,\n  __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__\n});","map":{"version":3,"sources":["/Users/val/Documents/Ouat/ouat-design-system/src/Icon.stories.js"],"names":["withSourceLoader","require","withSource","addSourceDecorator","addSource","__SOURCE_PREFIX__","__STORY__","__ADDS_MAP__","__MAIN_FILE_LOCATION__","__MODULE_DEPENDENCIES__","__LOCAL_DEPENDENCIES__","__IDS_TO_FRAMEWORKS__","React","Fragment","styled","css","Icon","icons","Meta","div","Item","li","props","minimal","List","ul","parameters","title","component","labels","Object","keys","length","map","key","noLabels","story","name","inline","block"],"mappings":"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","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/val/Documents/Ouat/ouat-design-system/src\";\n// @ts-ignore\nvar __STORY__ = \"import React, { Fragment } from 'react';\\nimport styled, { css } from 'styled-components';\\n\\nimport { Icon } from './Icon';\\nimport { icons } from './shared/icons';\\n\\nconst Meta = styled.div`\\n  color: #666;\\n  font-size: 12px;\\n`;\\n\\nconst Item = styled.li`\\n  display: inline-flex;\\n  flex-direction: row;\\n  align-items: center;\\n  flex: 0 1 20%;\\n  min-width: 120px;\\n\\n  padding: 0px 7.5px 20px;\\n\\n  svg {\\n    margin-right: 10px;\\n    width: 24px;\\n    height: 24px;\\n  }\\n\\n  ${props =>\\n    props.minimal &&\\n    css`\\n      flex: none;\\n      min-width: auto;\\n      padding: 0;\\n      background: #fff;\\n      border: 1px solid #666;\\n\\n      svg {\\n        display: block;\\n        margin-right: 0;\\n        width: 48px;\\n        height: 48px;\\n      }\\n    `};\\n`;\\n\\nconst List = styled.ul`\\n  display: flex;\\n  flex-flow: row wrap;\\n  list-style: none;\\n`;\\n\\nexport default {\\n  title: 'Design System|Icon',\\n  component: Icon,\\n};\\n\\nexport const labels = () => (\\n  <Fragment>\\n    There are {Object.keys(icons).length} icons\\n    <List>\\n      {Object.keys(icons).map(key => (\\n        <Item key={key}>\\n          <Icon icon={key} aria-hidden />\\n          <Meta>{key}</Meta>\\n        </Item>\\n      ))}\\n    </List>\\n  </Fragment>\\n);\\n\\nexport const noLabels = () => (\\n  <List>\\n    {Object.keys(icons).map(key => (\\n      <Item minimal key={key}>\\n        <Icon icon={key} aria-label={key} />\\n      </Item>\\n    ))}\\n  </List>\\n);\\n\\nnoLabels.story = {\\n  name: 'no labels',\\n};\\n\\nexport const inline = () => (\\n  <Fragment>\\n    this is an inline <Icon icon=\\\"facehappy\\\" aria-label=\\\"Happy face\\\" /> icon (default)\\n  </Fragment>\\n);\\n\\nexport const block = () => (\\n  <Fragment>\\n    this is a block <Icon icon=\\\"facehappy\\\" aria-label=\\\"Happy face\\\" block /> icon\\n  </Fragment>\\n);\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"design-system-icon--labels\":{\"startLoc\":{\"col\":22,\"line\":56},\"endLoc\":{\"col\":1,\"line\":68},\"startBody\":{\"col\":22,\"line\":56},\"endBody\":{\"col\":1,\"line\":68}},\"design-system-icon--no-labels\":{\"startLoc\":{\"col\":24,\"line\":70},\"endLoc\":{\"col\":1,\"line\":78},\"startBody\":{\"col\":24,\"line\":70},\"endBody\":{\"col\":1,\"line\":78}},\"design-system-icon--inline\":{\"startLoc\":{\"col\":22,\"line\":84},\"endLoc\":{\"col\":1,\"line\":88},\"startBody\":{\"col\":22,\"line\":84},\"endBody\":{\"col\":1,\"line\":88}},\"design-system-icon--block\":{\"startLoc\":{\"col\":21,\"line\":90},\"endLoc\":{\"col\":1,\"line\":94},\"startBody\":{\"col\":21,\"line\":90},\"endBody\":{\"col\":1,\"line\":94}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/Icon.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React, { Fragment } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { Icon } from './Icon';\nimport { icons } from './shared/icons';\n\nconst Meta = styled.div`\n  color: #666;\n  font-size: 12px;\n`;\n\nconst Item = styled.li`\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n  flex: 0 1 20%;\n  min-width: 120px;\n\n  padding: 0px 7.5px 20px;\n\n  svg {\n    margin-right: 10px;\n    width: 24px;\n    height: 24px;\n  }\n\n  ${props =>\n    props.minimal &&\n    css`\n      flex: none;\n      min-width: auto;\n      padding: 0;\n      background: #fff;\n      border: 1px solid #666;\n\n      svg {\n        display: block;\n        margin-right: 0;\n        width: 48px;\n        height: 48px;\n      }\n    `};\n`;\n\nconst List = styled.ul`\n  display: flex;\n  flex-flow: row wrap;\n  list-style: none;\n`;\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React, { Fragment } from 'react';\\nimport styled, { css } from 'styled-components';\\n\\nimport { Icon } from './Icon';\\nimport { icons } from './shared/icons';\\n\\nconst Meta = styled.div`\\n  color: #666;\\n  font-size: 12px;\\n`;\\n\\nconst Item = styled.li`\\n  display: inline-flex;\\n  flex-direction: row;\\n  align-items: center;\\n  flex: 0 1 20%;\\n  min-width: 120px;\\n\\n  padding: 0px 7.5px 20px;\\n\\n  svg {\\n    margin-right: 10px;\\n    width: 24px;\\n    height: 24px;\\n  }\\n\\n  ${props =>\\n    props.minimal &&\\n    css`\\n      flex: none;\\n      min-width: auto;\\n      padding: 0;\\n      background: #fff;\\n      border: 1px solid #666;\\n\\n      svg {\\n        display: block;\\n        margin-right: 0;\\n        width: 48px;\\n        height: 48px;\\n      }\\n    `};\\n`;\\n\\nconst List = styled.ul`\\n  display: flex;\\n  flex-flow: row wrap;\\n  list-style: none;\\n`;\\n\\nexport default {\\n  title: 'Design System|Icon',\\n  component: Icon,\\n};\\n\\nexport const labels = () => (\\n  <Fragment>\\n    There are {Object.keys(icons).length} icons\\n    <List>\\n      {Object.keys(icons).map(key => (\\n        <Item key={key}>\\n          <Icon icon={key} aria-hidden />\\n          <Meta>{key}</Meta>\\n        </Item>\\n      ))}\\n    </List>\\n  </Fragment>\\n);\\n\\nexport const noLabels = () => (\\n  <List>\\n    {Object.keys(icons).map(key => (\\n      <Item minimal key={key}>\\n        <Icon icon={key} aria-label={key} />\\n      </Item>\\n    ))}\\n  </List>\\n);\\n\\nnoLabels.story = {\\n  name: 'no labels',\\n};\\n\\nexport const inline = () => (\\n  <Fragment>\\n    this is an inline <Icon icon=\\\"facehappy\\\" aria-label=\\\"Happy face\\\" /> icon (default)\\n  </Fragment>\\n);\\n\\nexport const block = () => (\\n  <Fragment>\\n    this is a block <Icon icon=\\\"facehappy\\\" aria-label=\\\"Happy face\\\" block /> icon\\n  </Fragment>\\n);\\n\",\"locationsMap\":{\"design-system-icon--labels\":{\"startLoc\":{\"col\":22,\"line\":56},\"endLoc\":{\"col\":1,\"line\":68},\"startBody\":{\"col\":22,\"line\":56},\"endBody\":{\"col\":1,\"line\":68}},\"design-system-icon--no-labels\":{\"startLoc\":{\"col\":24,\"line\":70},\"endLoc\":{\"col\":1,\"line\":78},\"startBody\":{\"col\":24,\"line\":70},\"endBody\":{\"col\":1,\"line\":78}},\"design-system-icon--inline\":{\"startLoc\":{\"col\":22,\"line\":84},\"endLoc\":{\"col\":1,\"line\":88},\"startBody\":{\"col\":22,\"line\":84},\"endBody\":{\"col\":1,\"line\":88}},\"design-system-icon--block\":{\"startLoc\":{\"col\":21,\"line\":90},\"endLoc\":{\"col\":1,\"line\":94},\"startBody\":{\"col\":21,\"line\":90},\"endBody\":{\"col\":1,\"line\":94}}}},},\n  title: 'Design System|Icon',\n  component: Icon,\n};\n\nexport const labels = addSourceDecorator(() => (\n  <Fragment>\n    There are {Object.keys(icons).length} icons\n    <List>\n      {Object.keys(icons).map(key => (\n        <Item key={key}>\n          <Icon icon={key} aria-hidden />\n          <Meta>{key}</Meta>\n        </Item>\n      ))}\n    </List>\n  </Fragment>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n\nexport const noLabels = addSourceDecorator(() => (\n  <List>\n    {Object.keys(icons).map(key => (\n      <Item minimal key={key}>\n        <Icon icon={key} aria-label={key} />\n      </Item>\n    ))}\n  </List>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n\nnoLabels.story = {\n  name: 'no labels',\n};\n\nexport const inline = addSourceDecorator(() => (\n  <Fragment>\n    this is an inline <Icon icon=\"facehappy\" aria-label=\"Happy face\" /> icon (default)\n  </Fragment>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n\nexport const block = addSourceDecorator(() => (\n  <Fragment>\n    this is a block <Icon icon=\"facehappy\" aria-label=\"Happy face\" block /> icon\n  </Fragment>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n"]},"metadata":{},"sourceType":"module"}